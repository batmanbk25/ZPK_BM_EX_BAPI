*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVI_BM_EXBA_PAR.................................*
FORM GET_DATA_ZVI_BM_EXBA_PAR.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTB_BM_EXBA_PAR WHERE
(VIM_WHERETAB) .
    CLEAR ZVI_BM_EXBA_PAR .
ZVI_BM_EXBA_PAR-MANDT =
ZTB_BM_EXBA_PAR-MANDT .
ZVI_BM_EXBA_PAR-FNAME =
ZTB_BM_EXBA_PAR-FNAME .
ZVI_BM_EXBA_PAR-PARAM =
ZTB_BM_EXBA_PAR-PARAM .
ZVI_BM_EXBA_PAR-PARTX =
ZTB_BM_EXBA_PAR-PARTX .
ZVI_BM_EXBA_PAR-STRTY =
ZTB_BM_EXBA_PAR-STRTY .
ZVI_BM_EXBA_PAR-PARTY =
ZTB_BM_EXBA_PAR-PARTY .
ZVI_BM_EXBA_PAR-PARDOC =
ZTB_BM_EXBA_PAR-PARDOC .
ZVI_BM_EXBA_PAR-PARMSG =
ZTB_BM_EXBA_PAR-PARMSG .
ZVI_BM_EXBA_PAR-HDRFL =
ZTB_BM_EXBA_PAR-HDRFL .
ZVI_BM_EXBA_PAR-TESTRUN =
ZTB_BM_EXBA_PAR-TESTRUN .
ZVI_BM_EXBA_PAR-SHPOS =
ZTB_BM_EXBA_PAR-SHPOS .
    SELECT SINGLE * FROM ZTB_BM_EXBA_FM WHERE
FNAME = ZTB_BM_EXBA_PAR-FNAME .
    IF SY-SUBRC EQ 0.
ZVI_BM_EXBA_PAR-FTEXT =
ZTB_BM_EXBA_FM-FTEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVI_BM_EXBA_PAR.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVI_BM_EXBA_PAR .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVI_BM_EXBA_PAR.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVI_BM_EXBA_PAR-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTB_BM_EXBA_PAR WHERE
  FNAME = ZVI_BM_EXBA_PAR-FNAME AND
  PARAM = ZVI_BM_EXBA_PAR-PARAM .
    IF SY-SUBRC = 0.
    DELETE ZTB_BM_EXBA_PAR .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTB_BM_EXBA_PAR WHERE
  FNAME = ZVI_BM_EXBA_PAR-FNAME AND
  PARAM = ZVI_BM_EXBA_PAR-PARAM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTB_BM_EXBA_PAR.
    ENDIF.
ZTB_BM_EXBA_PAR-MANDT =
ZVI_BM_EXBA_PAR-MANDT .
ZTB_BM_EXBA_PAR-FNAME =
ZVI_BM_EXBA_PAR-FNAME .
ZTB_BM_EXBA_PAR-PARAM =
ZVI_BM_EXBA_PAR-PARAM .
ZTB_BM_EXBA_PAR-PARTX =
ZVI_BM_EXBA_PAR-PARTX .
ZTB_BM_EXBA_PAR-STRTY =
ZVI_BM_EXBA_PAR-STRTY .
ZTB_BM_EXBA_PAR-PARTY =
ZVI_BM_EXBA_PAR-PARTY .
ZTB_BM_EXBA_PAR-PARDOC =
ZVI_BM_EXBA_PAR-PARDOC .
ZTB_BM_EXBA_PAR-PARMSG =
ZVI_BM_EXBA_PAR-PARMSG .
ZTB_BM_EXBA_PAR-HDRFL =
ZVI_BM_EXBA_PAR-HDRFL .
ZTB_BM_EXBA_PAR-TESTRUN =
ZVI_BM_EXBA_PAR-TESTRUN .
ZTB_BM_EXBA_PAR-SHPOS =
ZVI_BM_EXBA_PAR-SHPOS .
    IF SY-SUBRC = 0.
    UPDATE ZTB_BM_EXBA_PAR ##WARN_OK.
    ELSE.
    INSERT ZTB_BM_EXBA_PAR .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVI_BM_EXBA_PAR-UPD_FLAG,
STATUS_ZVI_BM_EXBA_PAR-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVI_BM_EXBA_PAR.
  SELECT SINGLE * FROM ZTB_BM_EXBA_PAR WHERE
FNAME = ZVI_BM_EXBA_PAR-FNAME AND
PARAM = ZVI_BM_EXBA_PAR-PARAM .
ZVI_BM_EXBA_PAR-MANDT =
ZTB_BM_EXBA_PAR-MANDT .
ZVI_BM_EXBA_PAR-FNAME =
ZTB_BM_EXBA_PAR-FNAME .
ZVI_BM_EXBA_PAR-PARAM =
ZTB_BM_EXBA_PAR-PARAM .
ZVI_BM_EXBA_PAR-PARTX =
ZTB_BM_EXBA_PAR-PARTX .
ZVI_BM_EXBA_PAR-STRTY =
ZTB_BM_EXBA_PAR-STRTY .
ZVI_BM_EXBA_PAR-PARTY =
ZTB_BM_EXBA_PAR-PARTY .
ZVI_BM_EXBA_PAR-PARDOC =
ZTB_BM_EXBA_PAR-PARDOC .
ZVI_BM_EXBA_PAR-PARMSG =
ZTB_BM_EXBA_PAR-PARMSG .
ZVI_BM_EXBA_PAR-HDRFL =
ZTB_BM_EXBA_PAR-HDRFL .
ZVI_BM_EXBA_PAR-TESTRUN =
ZTB_BM_EXBA_PAR-TESTRUN .
ZVI_BM_EXBA_PAR-SHPOS =
ZTB_BM_EXBA_PAR-SHPOS .
    SELECT SINGLE * FROM ZTB_BM_EXBA_FM WHERE
FNAME = ZTB_BM_EXBA_PAR-FNAME .
    IF SY-SUBRC EQ 0.
ZVI_BM_EXBA_PAR-FTEXT =
ZTB_BM_EXBA_FM-FTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVI_BM_EXBA_PAR-FTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVI_BM_EXBA_PAR USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVI_BM_EXBA_PAR-FNAME TO
ZTB_BM_EXBA_PAR-FNAME .
MOVE ZVI_BM_EXBA_PAR-PARAM TO
ZTB_BM_EXBA_PAR-PARAM .
MOVE ZVI_BM_EXBA_PAR-MANDT TO
ZTB_BM_EXBA_PAR-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTB_BM_EXBA_PAR'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTB_BM_EXBA_PAR TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTB_BM_EXBA_PAR'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZVI_BM_EXBA_PAR USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZTB_BM_EXBA_PAR-MANDT =
ZVI_BM_EXBA_PAR-MANDT .
ZTB_BM_EXBA_PAR-FNAME =
ZVI_BM_EXBA_PAR-FNAME .
ZTB_BM_EXBA_PAR-PARAM =
ZVI_BM_EXBA_PAR-PARAM .
ZTB_BM_EXBA_PAR-PARTX =
ZVI_BM_EXBA_PAR-PARTX .
ZTB_BM_EXBA_PAR-STRTY =
ZVI_BM_EXBA_PAR-STRTY .
ZTB_BM_EXBA_PAR-PARTY =
ZVI_BM_EXBA_PAR-PARTY .
ZTB_BM_EXBA_PAR-PARDOC =
ZVI_BM_EXBA_PAR-PARDOC .
ZTB_BM_EXBA_PAR-PARMSG =
ZVI_BM_EXBA_PAR-PARMSG .
ZTB_BM_EXBA_PAR-HDRFL =
ZVI_BM_EXBA_PAR-HDRFL .
ZTB_BM_EXBA_PAR-TESTRUN =
ZVI_BM_EXBA_PAR-TESTRUN .
ZTB_BM_EXBA_PAR-SHPOS =
ZVI_BM_EXBA_PAR-SHPOS .
    SELECT SINGLE * FROM ZTB_BM_EXBA_FM WHERE
FNAME = ZTB_BM_EXBA_PAR-FNAME .
    IF SY-SUBRC EQ 0.
ZVI_BM_EXBA_PAR-FTEXT =
ZTB_BM_EXBA_FM-FTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVI_BM_EXBA_PAR-FTEXT .
    ENDIF.
ENDFORM.

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
